#!/bin/bash

## RNA Research Pipeline
## Copyleft 2017 Institut Curie
## Author(s): Nicolas Servant
## Contact: nicolas.servant@curie.fr
## This software is distributed without any guarantee under the terms of the GNU General
## Public License, either Version 2, June 1991 or Version 3, June 2007.

                                                                   
SOFT="RNApip_cluster"
VERSION="0.0.2_devel"

function usage {
    echo -e "usage : $SOFT -i SAMPLE_PLAN -o OUTPUT -c CONFIG [-m METADATA] [-h] [-v]"
    echo -e "Use option -h|--help for more information"
}

function help {
    usage;
    echo 
    echo "$SOFT $VERSION"
    echo "---------------"
    echo "OPTIONS"
    echo
    echo "   -i|--input INPUT: sample plan with the list of sample to run in parallel"
    echo "   -o|--output OUTPUT: output folder"
    echo "   -c|--conf CONFIG: configuration file for RNA processing"
    echo "   [-m|--meta] METADATA: Metada related to sequencing run"
    echo "   [-h|--help]: help"
    exit;
}

if [ $# -lt 1 ]
then
    usage
    exit
fi

# Transform long options to short ones
for arg in "$@"; do
  shift
  case "$arg" in
      "--input") set -- "$@" "-i" ;;
      "--output") set -- "$@" "-o" ;;
      "--conf")   set -- "$@" "-c" ;;
      "--meta")   set -- "$@" "-m" ;;
      "--help")   set -- "$@" "-h" ;;
      *)        set -- "$@" "$arg"
  esac
done

while getopts "i:o:c:m:h" OPT
do
    case $OPT in
        i) SPLAN=$OPTARG;;
	o) ODIR=$OPTARG;;
	c) CONF=$OPTARG;;
	m) META=$OPTARG;;
	h) help ;;
	\?)
	    echo "Invalid option: -$OPTARG" >&2
	    usage
	     exit 1
	     ;;
	:)
	    echo "Option -$OPTARG requires an argument." >&2
	    usage
	    exit 1
	    ;;
    esac
done

##STOPIFNOT
if [[ -z $SPLAN || -z $ODIR || -z $CONF ]]; then
    usage
    exit
fi

## Set PATHS
BIN_PATH=`dirname $0`
ABS_BIN_PATH=`cd "$BIN_PATH"; pwd`
SCRIPTS_PATH="$ABS_BIN_PATH/../scripts/"
#CUR_PATH=$(pwd -P)
#echo $CUR_PATH

## Set absolute path
CONF=$(realpath $CONF)
ODIR=$(realpath $ODIR)

## Load functions file
. $SCRIPTS_PATH/utils.inc.sh

## Run the pipeline in parallel
N_SAMPLE=$(grep -v "^#" $SPLAN | wc -l)

pid=$(echo "bash ${SCRIPTS_PATH}/run_qsub.sh" | qsub  -m ae -j oe -q batch -N RNApip_cluster -l "nodes=1:ppn=8,mem=50gb,walltime=10:00:00" -t 1-${N_SAMPLE} -v SAMPLE_PLAN="${SPLAN}",ODIR="${ODIR}",CONFIG="${CONF}")
jobidarray=${pid%%.*}

## Run the report
if [[ -z $META ]]; then
    pid=$(echo "${ABS_BIN_PATH}/makeRNAreport -i ${ODIR} -c ${CONF}" | qsub -m ae -j oe -N RNApip_report -l "nodes=1:ppn=1,mem=2gb,walltime=01:00:00" -W depend=afterokarray:${jobidarray})
else
    META=$(realpath $META)
    pid=$(echo "${ABS_BIN_PATH}/makeRNAreport -i ${ODIR} -c ${CONF} -m ${META}" | qsub -m ae -j oe -N RNApip_report -l "nodes=1:ppn=1,mem=2gb,walltime=01:00:00" -W depend=afterokarray:${jobidarray})
fi
echo "Job(s) submitted to the cluster !"
